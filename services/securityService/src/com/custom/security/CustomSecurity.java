/*Generated by WaveMaker Studio*/

package com.custom.security;

import java.util.ArrayList;

import com.wavemaker.commons.WMRuntimeException;
import com.wavemaker.turbomobiles.GetUserByEmail.model.ResponseContentEntryItem;
import com.wavemaker.turbomobiles.GetUserByEmail.model.RootResponse;
import com.wavemaker.turbomobiles.GetUserByEmail.service.GetUserByEmailService;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.authentication.BadCredentialsException;
import org.springframework.security.core.AuthenticationException;

import com.wavemaker.runtime.security.AuthRequestContext;
import com.wavemaker.runtime.security.WMCustomAuthenticationManager;
import com.wavemaker.runtime.security.WMUser;

import org.springframework.security.core.AuthenticationException;

public class CustomSecurity implements WMCustomAuthenticationManager {

 private static final Logger logger=LoggerFactory.getLogger(CustomSecurity.class);

 @Autowired
 private GetUserByEmailService userByEmailService;

 public WMUser authenticate(AuthRequestContext authRequestContext) throws AuthenticationException {
        String username = authRequestContext.getUsername();
		String password = authRequestContext.getPassword();
        logger.info(username);

	 RootResponse userByEmail = userByEmailService.invoke(username);
	 ResponseContentEntryItem user = userByEmail.getContent().size() > 0 ? userByEmail.getContent().get(0) : null;
	 if(user == null) {
		 throw new BadCredentialsException("Invalid Credentials");
	 }
	 if(!user.getPassword().equals(password)){
		 throw new BadCredentialsException("Invalid Credentials");
	 }

	 WMUser wmUser = new WMUser(username, new ArrayList<>());
	 wmUser.setUserId(user.getId().toString());
	 wmUser.setUserLongName(user.getName());
	 return wmUser;
    }
}
